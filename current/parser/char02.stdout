disabled dot output: use ./ to parse relative files starting with a colon.
parsing 'test/parser/char02.mod'...
successfully parsed.
  AST:
    CAstScope: 'char02'
      symbol table:
        [[
          [ *DIM(<ptr(8) to <NULL>>,<integer>) --> <integer>           ]
          [ *DOFS(<ptr(8) to <NULL>>) --> <integer>           ]
          [ *ReadInt() --> <integer>           ]
          [ *ReadLong() --> <longint>           ]
          [ *WriteChar(<char>) --> <NULL>           ]
          [ *WriteInt(<integer>) --> <NULL>           ]
          [ *WriteLn() --> <NULL>           ]
          [ *WriteLong(<longint>) --> <NULL>           ]
          [ *WriteStr(<ptr(8) to array of <char>>>) --> <NULL>           ]
          [ @c        <char>           c           ]
          [ *compare(<char>) --> <NULL>           ]
        ]]
      statement list:
        := <char>
          [ @c        <char>           c ] <char>
          49 <char>
        call [ *compare(<char>) --> <NULL> ] <NULL>
          [ @c        <char>           c ] <char>
        call [ *compare(<char>) --> <NULL> ] <NULL>
          97 <char>
        call [ *compare(<char>) --> <NULL> ] <NULL>
          49 <char>
        call [ *compare(<char>) --> <NULL> ] <NULL>
          0 <char>
      nested scopes:
        CAstScope: 'compare'
          symbol table:
            [[
              [ %c        <char>               ]
            ]]
          statement list:
            if cond
              >= <integer>
                [ %c        <char> ] <char>
                49 <char>
            if-body
              call [ *WriteChar(<char>) --> <NULL> ] <NULL>
                49 <char>
            else-body
              call [ *WriteChar(<char>) --> <NULL> ] <NULL>
                48 <char>
            call [ *WriteLn() --> <NULL> ] <NULL>
          nested scopes:
            empty.
        
    


Done.
