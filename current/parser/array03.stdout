disabled dot output: use ./ to parse relative files starting with a colon.
parsing 'test/parser/array03.mod'...
successfully parsed.
  AST:
    CAstScope: 'array03'
      symbol table:
        [[
          [ @A        array 5 of <integer>>           A           ]
          [ *DIM(<ptr(8) to <NULL>>,<integer>) --> <integer>           ]
          [ *DOFS(<ptr(8) to <NULL>>) --> <integer>           ]
          [ *ReadInt() --> <integer>           ]
          [ *ReadLong() --> <longint>           ]
          [ *Set(<ptr(8) to array of <integer>>>,<integer>) --> <NULL>           ]
          [ *WriteChar(<char>) --> <NULL>           ]
          [ *WriteInt(<integer>) --> <NULL>           ]
          [ *WriteLn() --> <NULL>           ]
          [ *WriteLong(<longint>) --> <NULL>           ]
          [ *WriteStr(<ptr(8) to array of <char>>>) --> <NULL>           ]
          [ @i        <integer>           i           ]
          [ *print() --> <NULL>           ]
        ]]
      statement list:
        call [ *WriteInt(<integer>) --> <NULL> ] <NULL>
          11111111 <integer>
        call [ *WriteLn() --> <NULL> ] <NULL>
        call [ *print() --> <NULL> ] <NULL>
        := <integer>
          [ @A        array 5 of <integer>>           A ] <integer>
            2 <integer>
          3 <integer>
        := <integer>
          [ @i        <integer>           i ] <integer>
          [ @A        array 5 of <integer>>           A ] <integer>
            2 <integer>
        call [ *Set(<ptr(8) to array of <integer>>>,<integer>) --> <NULL> ] <NULL>
          &() <ptr(8) to array 5 of <integer>>>
            [ @A        array 5 of <integer>>           A ] array 5 of <integer>>
          [ @i        <integer>           i ] <integer>
        call [ *WriteInt(<integer>) --> <NULL> ] <NULL>
          22222222 <integer>
        call [ *WriteLn() --> <NULL> ] <NULL>
        call [ *print() --> <NULL> ] <NULL>
      nested scopes:
        CAstScope: 'Set'
          symbol table:
            [[
              [ %P        <ptr(8) to array of <integer>>>               ]
              [ %v        <integer>               ]
            ]]
          statement list:
            := <integer>
              [ %P        <ptr(8) to array of <integer>>> ] <integer>
                [ %v        <integer> ] <integer>
              1 <integer>
          nested scopes:
            empty.
        
        CAstScope: 'print'
          symbol table:
            [[
              [ $i        <integer>               ]
            ]]
          statement list:
            := <integer>
              [ $i        <integer> ] <integer>
              0 <integer>
            while cond
              < <boolean>
                [ $i        <integer> ] <integer>
                5 <integer>
            while-body
              call [ *WriteInt(<integer>) --> <NULL> ] <NULL>
                [ @A        array 5 of <integer>>           A ] <integer>
                  [ $i        <integer> ] <integer>
              call [ *WriteLn() --> <NULL> ] <NULL>
              := <integer>
                [ $i        <integer> ] <integer>
                add <integer>
                  [ $i        <integer> ] <integer>
                  1 <integer>
          nested scopes:
            empty.
        
    


Done.
